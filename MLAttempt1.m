#load NHL data in:#change name as required: addpath("/Users/mac/Documents/Wordpress/StatsNHL");addpath("/Users/mac/Documents/AppDmgs/Octave/liblinear-2.11/matlab");NHLdata = dlmread("/Users/mac/Documents/Wordpress/StatsNHL/consolidatedNHLStats.csv", ",");#given NxM matrix - need labels; wins = output win_labels = NHLdata(:,1);#need feature datafeature_l = length(NHLdata(1,:));features = NHLdata(:, 2:feature_l);#make 15 instances for testing, the rest for training. labels_l = length(win_labels);test_win_labels = win_labels(labels_l - 15 : labels_l);#training labelstrain_win_labels = win_labels(1 : labels_l - 16);#need training + testing feature data: test_features = features(labels_l - 15 : labels_l, :);test_features = sparse(test_features);train_features = features(1 : labels_l - 16 , :);train_features = sparse(train_features);#creating the classifier (the trainer using liblinear):model = train(train_win_labels, train_features);#test model:[predicted_labels, accuracy, decision_values] = predict(test_win_labels, test_features, model);