#load NHL data in:#change name as required: addpath("/Users/mac/Documents/Wordpress/StatsNHL");addpath("/Users/mac/Documents/AppDmgs/Octave/liblinear-2.11/matlab");trainingData = dlmread("/Users/mac/Documents/Wordpress/StatsNHL/TrainingData.csv", ",");testData1 = dlmread("/Users/mac/Documents/Wordpress/StatsNHL/TestDataRV.csv", ",");testData2 = dlmread("/Users/mac/Documents/Wordpress/StatsNHL/TestDataSCF.csv", ",");#given NxM matrix - need labels; wins = output trainWinLabels = trainingData(:,1);#need feature data for trainer:feature_l = length(trainingData(1,:));trainFeatures = trainingData(:, 2:feature_l);trainFeatures = sparse(trainFeatures);#create seperate test datasets. 1 refers to RVs, 2 refers to SCF. testWinLabels1 = testData1(:,1);testWinLabels2 = testData2(:,1);testFeatures1 = testData1(:, 2:feature_l);testFeatures2 = testData2(:, 2:feature_l);testFeatures1 = sparse(testFeatures1);testFeatures2 = sparse(testFeatures2);#creating the classifier (the trainer using liblinear):model = train(trainWinLabels, trainFeatures);#test model:[predicted_labels, accuracy, decision_values] = predict(testWinLabels2, testFeatures2, model);